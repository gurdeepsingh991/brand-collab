"""Initial schema

Revision ID: 48c6e49e56d2
Revises: 
Create Date: 2025-06-24 20:39:29.093186

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '48c6e49e56d2'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('first_name', sa.String(), nullable=True),
    sa.Column('middle_name', sa.String(), nullable=True),
    sa.Column('last_name', sa.String(), nullable=True),
    sa.Column('role', sa.String(), nullable=True),
    sa.Column('created_on', sa.DateTime(), nullable=True),
    sa.Column('user_type', sa.String(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('user_id'),
    sa.UniqueConstraint('email')
    )
    op.create_table('brand_profile',
    sa.Column('brand_id', sa.UUID(), nullable=False),
    sa.Column('brand_name', sa.String(), nullable=False),
    sa.Column('brand_industry', sa.String(), nullable=True),
    sa.Column('brand_type', sa.String(), nullable=True),
    sa.Column('country', sa.String(), nullable=True),
    sa.Column('segment', sa.String(), nullable=True),
    sa.Column('created_on', sa.DateTime(), nullable=True),
    sa.Column('created_by', sa.UUID(), nullable=True),
    sa.Column('last_modified_on', sa.DateTime(), nullable=True),
    sa.Column('last_modified_by', sa.String(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['created_by'], ['users.user_id'], ),
    sa.PrimaryKeyConstraint('brand_id')
    )
    op.create_table('influencer_profile',
    sa.Column('influencer_id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=True),
    sa.Column('city', sa.String(), nullable=True),
    sa.Column('country', sa.String(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.user_id'], ),
    sa.PrimaryKeyConstraint('influencer_id')
    )
    op.create_table('campaigns',
    sa.Column('campaign_id', sa.UUID(), nullable=False),
    sa.Column('brand_id', sa.UUID(), nullable=False),
    sa.Column('title', sa.String(), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('target_platform', sa.String(), nullable=True),
    sa.Column('budget', sa.Float(), nullable=True),
    sa.Column('start_date', sa.DateTime(), nullable=True),
    sa.Column('end_date', sa.DateTime(), nullable=True),
    sa.Column('goals', sa.Text(), nullable=True),
    sa.Column('priority', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['brand_id'], ['brand_profile.brand_id'], ),
    sa.PrimaryKeyConstraint('campaign_id')
    )
    op.create_table('influencer_platforms',
    sa.Column('platform_id', sa.UUID(), nullable=False),
    sa.Column('influencer_id', sa.UUID(), nullable=True),
    sa.Column('platform_name', sa.String(), nullable=False),
    sa.Column('no_of_followers', sa.Integer(), nullable=True),
    sa.Column('no_of_subscribers', sa.Integer(), nullable=True),
    sa.Column('engagement_rate', sa.Float(), nullable=True),
    sa.Column('is_primary', sa.Boolean(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['influencer_id'], ['influencer_profile.influencer_id'], ),
    sa.PrimaryKeyConstraint('platform_id')
    )
    op.create_table('influencer_services',
    sa.Column('service_id', sa.UUID(), nullable=False),
    sa.Column('influencer_id', sa.UUID(), nullable=True),
    sa.Column('service_type', sa.String(), nullable=False),
    sa.Column('charges_per_hour', sa.Float(), nullable=True),
    sa.Column('currency', sa.String(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['influencer_id'], ['influencer_profile.influencer_id'], ),
    sa.PrimaryKeyConstraint('service_id')
    )
    op.create_table('collab_applications',
    sa.Column('application_id', sa.UUID(), nullable=False),
    sa.Column('campaign_id', sa.UUID(), nullable=True),
    sa.Column('influencer_id', sa.UUID(), nullable=True),
    sa.Column('pitch', sa.Text(), nullable=True),
    sa.Column('match_score', sa.Float(), nullable=True),
    sa.Column('status', sa.String(), nullable=True),
    sa.Column('applied_on', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['campaign_id'], ['campaigns.campaign_id'], ),
    sa.ForeignKeyConstraint(['influencer_id'], ['influencer_profile.influencer_id'], ),
    sa.PrimaryKeyConstraint('application_id')
    )
    op.create_table('collaborations',
    sa.Column('collaboration_id', sa.UUID(), nullable=False),
    sa.Column('application_id', sa.UUID(), nullable=True),
    sa.Column('deliverables', sa.Text(), nullable=True),
    sa.Column('agreed_budget', sa.Float(), nullable=True),
    sa.Column('start_date', sa.Date(), nullable=True),
    sa.Column('end_date', sa.Date(), nullable=True),
    sa.Column('status', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['application_id'], ['collab_applications.application_id'], ),
    sa.PrimaryKeyConstraint('collaboration_id'),
    sa.UniqueConstraint('application_id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('collaborations')
    op.drop_table('collab_applications')
    op.drop_table('influencer_services')
    op.drop_table('influencer_platforms')
    op.drop_table('campaigns')
    op.drop_table('influencer_profile')
    op.drop_table('brand_profile')
    op.drop_table('users')
    # ### end Alembic commands ###
